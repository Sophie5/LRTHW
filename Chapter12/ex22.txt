Puts = lets you print things to the screen
.rb = indicates a ruby file
"" = double quotes ( turns a piece of text into a string if put around it )
'' = single quotes ( turns a piece of text into a string if put around it )
# = octothorpe (allows you to comment out a lien or write comments)
+ =  plus (allows you to add things together)
- = minus ( allows you to take one number away fro another)
* = asterisk (can be used to times things together and when  used put in front of and arguemnt in a function its tell Ruby to take all argumetns to the function and put them into that arguemnt)
/ = slash ( allows you to divide numbers)
% = percentage(modulus) (allows you to work out the remainder)
< = less than ( return true or false for if something is smaller than something else)
> = greater than ( return true or false for if something is greater than something else)
<= = less than or equal ( return true or false for if something is smaller than or equal to something else)
>= = greater than or equal ( return true or false for if something is greater than or equal to something else)
irb = interactive ruby (allows you to create a ruby environment)
#{} =   braces (to format e.g. allows you to insert variables into strings)
_ =underscore (can be used instead of spaces)
= = equals (lets you set certain things equal to others
true or false = boolean (can be used to give a true or false value to and equation )
print = lets you print things to the screen
%{} = allows you to apply the same format to multiple values
\n = new -line (allows you to create a new line )
%q = this is an alternative for double-quoted strings, when you have more quote characters in a string.
""" = triple double quotes ( works like a string but you can add all the text you want until you type """ again)
''' = triple single quotes ( works like a string but you can add all the text you want until you type ''' again)
\\ =double backslash(creates a backslash)
\' = single-quote (creates a single quote)
\" = double quote ( creates a double quote)
\a = Bell ( does ASCII bell (BEL))
\b  = Backspace ( does ASCII backspace (BS))
\f = Formfeed ( does ASCII formfeed (FF))
\n = newline ( does ASCII linefeed (LF))
\r = carriage (does ASCII Carriage Return (CR))
\t  = Tab (does ASCII Horizontal Tab (TAB))
\uxxxx = hex value (Charater with 16-bit hex value xxxx (Unicode only))
\v = vertical tab (does ASCII vetical tab (VT))
\ooo =octal value  (Character with octal value ooo)
\xhh =hex value (Character with hex value hh)
gets (gets a line of text, including a line break at the end)
chomp (removes the line break)
.to_i= to interger (changes target to a integer)
.to_f = to float ( changes target to a float)
AGRV = argument variable (It hp.ds the arguments you pass t you Ruby script when you run it)
$stdin = standard input  (lrs you res data from STDIN insteadd or arbitary files )
.txt =tells you its a text file
open = (opens named files )
read = (reads the contents of the file)
close = (Closes the file)
readline = (reads just one line of a text file)
truncate = (Empties the file)
write('stuff') = (writes e.g. "stuff" to the file)
(open,'w') =  (opens the file in the write mode)
File.exist?(example.txt) = (Checks if there is already a file called example.txt already saved)
echo = (allows you to put  words into a file )
cat = concaternate (allows ylu to join files togther and read the content of a single file)
def (creates a function )
end (ends a function)
length (measure the length of something)
ri = ruby index ( lets you read the ruby index)
+= (lets you add whatever is on left side of this sign to the right side without having to type the value on the right side again)
file.seek(0) =(deals in bytes and moves the file to the number byte in the brackets e.g. 0 )
return (returns a value from a function)
$ dollar sign (tells ruby that its a global variable )
equal? (check if it has two object have the same obkect. id and returns a true or flase value )
comma
: colon =( can be usd to set a key to a value in hashes)
. = full stop (ends a sentance  )
?  = question mark (lets you ask a question in text )
